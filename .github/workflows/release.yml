name: Release to PyPI

on:
  push:
    branches: [main]
    paths:
      - 'src/meta_agent/__about__.py'  # Only trigger when version changes
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read
  id-token: write  # Required for trusted publishing

jobs:
  # Only run if version was actually bumped
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to compare
      
      - name: Check if version changed
        id: check
        run: |
          # Get current version
          CURRENT_VERSION=$(grep '__version__' src/meta_agent/__about__.py | cut -d'"' -f2)
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if version file changed in this push
          if git diff HEAD~1 HEAD --name-only | grep -q "src/meta_agent/__about__.py"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version not changed, skipping release"
          fi

  test-before-release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: false
      - name: Install dependencies
        run: |
          uv sync --extra test
          uv pip install 'pydantic>=2.10,<3'
      - name: Run test suite
        env:
          OPENAI_API_KEY: "test-key"
          PYTHONPATH: "${{ github.workspace }}/src"
        run: |
          uv run pytest -v --cov=src/meta_agent tests --tb=short
      - name: Run linting
        run: |
          uv run ruff check .
          uv run pyright

  release:
    needs: [check-version, test-before-release]
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    environment: release  # Optional: requires manual approval for releases
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: false
          
      - name: Sync version between pyproject.toml and __about__.py
        run: |
          VERSION=$(grep '__version__' src/meta_agent/__about__.py | cut -d'"' -f2)
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
          echo "Synced version to $VERSION"
          
      - name: Build package
        run: |
          uv build
          
      - name: Verify build
        run: |
          ls -la dist/
          uv run twine check dist/*
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(grep '__version__' src/meta_agent/__about__.py | cut -d'"' -f2)
          gh release create "v$VERSION" \
            --title "Meta Agent v$VERSION" \
            --notes "See [CHANGELOG.md](https://github.com/DannyMac180/meta-agent/blob/main/CHANGELOG.md) for details." \
            --verify-tag \
            dist/*
