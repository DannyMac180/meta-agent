name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-cov
        
        # Use lock file if available, otherwise install normally
        PYTHON_VERSION=${{ matrix.python-version }}
        LOCK_FILE=lock_files/requirements-py${PYTHON_VERSION/./}-lock.txt
        
        if [ -f "$LOCK_FILE" ]; then
          echo "Using lock file: $LOCK_FILE"
          pip install -e . --no-deps
          pip install -r $LOCK_FILE
        else
          echo "Lock file not found, installing from requirements.txt"
          pip install -e . --no-deps
          pip install -r requirements.txt
        fi
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest (unit tests)
      run: |
        pytest tests/unit -v
      
    - name: Test with pytest (integration tests)
      if: github.event_name == 'push'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        pytest tests/integration -v
        
    - name: Generate coverage report
      run: |
        pytest --cov=meta_agent tests/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
